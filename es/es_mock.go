// Code generated by MockGen. DO NOT EDIT.
// Source: ./es/es.go

// Package es is a generated GoMock package.
package es

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockES is a mock of ES interface
type MockES struct {
	ctrl     *gomock.Controller
	recorder *MockESMockRecorder
}

// MockESMockRecorder is the mock recorder for MockES
type MockESMockRecorder struct {
	mock *MockES
}

// NewMockES creates a new mock instance
func NewMockES(ctrl *gomock.Controller) *MockES {
	mock := &MockES{ctrl: ctrl}
	mock.recorder = &MockESMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockES) EXPECT() *MockESMockRecorder {
	return m.recorder
}

// WriteDocs mocks base method
func (m *MockES) WriteDocs(arg0 context.Context, arg1 []Doc) error {
	ret := m.ctrl.Call(m, "WriteDocs", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteDocs indicates an expected call of WriteDocs
func (mr *MockESMockRecorder) WriteDocs(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteDocs", reflect.TypeOf((*MockES)(nil).WriteDocs), arg0, arg1)
}
